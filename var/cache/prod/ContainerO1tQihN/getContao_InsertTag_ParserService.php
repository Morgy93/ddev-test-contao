<?php

namespace ContainerO1tQihN;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getContao_InsertTag_ParserService extends Contao_ManagerBundle_HttpKernel_ContaoKernelProdContainer
{
    /*
     * Gets the public 'contao.insert_tag.parser' shared service.
     *
     * @return \Contao\CoreBundle\InsertTag\InsertTagParser
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/InsertTag/InsertTagParser.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/InsertTag/InsertTagSubscription.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/InsertTag/Resolver/InsertTagResolverNestedResolvedInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/InsertTag/Resolver/DateInsertTag.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/InsertTag/Resolver/FormInsertTag.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/InsertTag/Resolver/FragmentInsertTag.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/InsertTag/Resolver/LegacyInsertTag.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/InsertTag/Resolver/LinkInsertTag.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/InsertTag/Resolver/BlockInsertTagResolverNestedResolvedInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/InsertTag/Resolver/IfLanguageInsertTag.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/InsertTag/Flag/InsertTagFlagInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/InsertTag/Flag/PhpFunctionFlag.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/InsertTag/Flag/StringUtilFlag.php';
        include_once \dirname(__DIR__, 4).'/vendor/contao/core-bundle/src/InsertTag/Flag/FormatFlag.php';

        $a = ($container->services['monolog.logger.contao.error'] ?? self::getMonolog_Logger_Contao_ErrorService($container));

        if (isset($container->services['contao.insert_tag.parser'])) {
            return $container->services['contao.insert_tag.parser'];
        }
        $b = ($container->services['fragment.handler'] ?? $container->load('getFragment_HandlerService'));

        if (isset($container->services['contao.insert_tag.parser'])) {
            return $container->services['contao.insert_tag.parser'];
        }
        $c = ($container->services['contao.framework'] ?? self::getContao_FrameworkService($container));
        $d = ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack());

        $container->services['contao.insert_tag.parser'] = $instance = new \Contao\CoreBundle\InsertTag\InsertTagParser($c, $a, $b, $d, NULL, $container->parameters['contao.insert_tags.allowed_tags']);

        $e = new \Contao\CoreBundle\InsertTag\Resolver\FormInsertTag($d);
        $f = new \Contao\CoreBundle\InsertTag\Resolver\LegacyInsertTag($container);
        $g = new \Contao\CoreBundle\InsertTag\Resolver\LinkInsertTag($c, ($container->services['contao.security.token_checker'] ?? self::getContao_Security_TokenCheckerService($container)), ($container->services['contao.routing.content_url_generator'] ?? self::getContao_Routing_ContentUrlGeneratorService($container)));
        $h = new \Contao\CoreBundle\InsertTag\Resolver\IfLanguageInsertTag($d);
        $i = new \Contao\CoreBundle\InsertTag\Flag\PhpFunctionFlag();
        $j = new \Contao\CoreBundle\InsertTag\Flag\StringUtilFlag();
        $k = new \Contao\CoreBundle\InsertTag\Flag\FormatFlag();

        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription(new \Contao\CoreBundle\InsertTag\Resolver\DateInsertTag($c), '__invoke', 'date', NULL, true, true));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($e, 'replaceConfirmation', 'form_confirmation', NULL, true, true));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($e, 'replaceSessionData', 'form_session_data', NULL, true, true));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription(new \Contao\CoreBundle\InsertTag\Resolver\FragmentInsertTag(), '__invoke', 'fragment', NULL, true, true));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'abbr', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'acronym', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'article', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'article_open', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'article_teaser', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'article_title', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'article_url', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'br', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'email', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'email_close', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'email_open', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'email_url', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'env', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'figure', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'file', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'image', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'insert_article', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'insert_content', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'insert_form', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'insert_module', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'label', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'lang', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'last_update', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'page', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'picture', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'user', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($f, '__invoke', 'version', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($g, 'replaceInsertTag', 'link', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($g, 'replaceInsertTag', 'link_name', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($g, 'replaceInsertTag', 'link_open', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($g, 'replaceInsertTag', 'link_title', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($g, 'replaceInsertTag', 'link_url', NULL, true, false));
        $instance->addSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($g, 'replaceInsertTagClose', 'link_close', NULL, true, false));
        $instance->addBlockSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($h, '__invoke', 'iflng', 'iflng', true, false));
        $instance->addBlockSubscription(new \Contao\CoreBundle\InsertTag\InsertTagSubscription($h, '__invoke', 'ifnlng', 'ifnlng', true, false));
        $instance->addFlagCallback('addslashes', $i, '__invoke');
        $instance->addFlagCallback('ampersand', $j, 'ampersand');
        $instance->addFlagCallback('attr', $j, 'attr');
        $instance->addFlagCallback('currency_format', $k, 'currencyFormat');
        $instance->addFlagCallback('encode_email', $j, 'encodeEmail');
        $instance->addFlagCallback('encodeemail', $j, 'encodeEmail');
        $instance->addFlagCallback('lcfirst', $j, 'lcfirst');
        $instance->addFlagCallback('ltrim', $i, '__invoke');
        $instance->addFlagCallback('nl2br', $j, 'nl2Br');
        $instance->addFlagCallback('number_format', $k, 'numberFormat');
        $instance->addFlagCallback('rawurlencode', $i, '__invoke');
        $instance->addFlagCallback('readable_size', $k, 'readableSize');
        $instance->addFlagCallback('rtrim', $i, '__invoke');
        $instance->addFlagCallback('specialchars', $j, 'specialchars');
        $instance->addFlagCallback('standardize', $j, 'standardize');
        $instance->addFlagCallback('strtolower', $j, 'strtolower');
        $instance->addFlagCallback('strtoupper', $j, 'strtoupper');
        $instance->addFlagCallback('trim', $i, '__invoke');
        $instance->addFlagCallback('ucfirst', $j, 'ucfirst');
        $instance->addFlagCallback('ucwords', $j, 'ucwords');
        $instance->addFlagCallback('urlattr', $j, 'urlattr');
        $instance->addFlagCallback('urlencode', $i, '__invoke');
        $instance->addFlagCallback('utf8_romanize', $j, 'utf8Romanize');
        $instance->addFlagCallback('utf8_strtolower', $j, 'strtolower');
        $instance->addFlagCallback('utf8_strtoupper', $j, 'strtoupper');

        return $instance;
    }
}
